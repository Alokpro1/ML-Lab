# -*- coding: utf-8 -*-
"""Assignment5_Q1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QL25dtcf9bDMaicbuFemgAyiKqIkFItI
"""

import pandas as pd
import numpy as np
eps = np.finfo(float).eps
from numpy import log2 as log
from sklearn.metrics import confusion_matrix 
from sklearn.model_selection import train_test_split 
from sklearn.tree import DecisionTreeClassifier 
from sklearn.metrics import accuracy_score 
from sklearn.metrics import classification_report

df = pd.read_csv("speech.csv")

nan_value = float("NaN")
df=df.replace("?",nan_value,inplace=False)
df=df.dropna()

df = pd.get_dummies(df,drop_first=True)

cls = df.columns.tolist()
cls = cls[-1:] + cls[:-1]
df = df[cols]
x = df.values[:, 1:] 
y = df.values[:, 0] 

X_train, X_test, y_train, y_test = train_test_split(x, y, test_size = 0.8, random_state = 100)
clf_entropy = DecisionTreeClassifier(criterion = "entropy",random_state = 100, max_depth = 12, min_samples_leaf = 6)

clf_entropy.fit(X_train, y_train) 
y_pred = clf_entropy.predict(X_test) 


print ("Accuracy : ", accuracy_score(y_test,y_pred)*100)



mean = np.mean(y_test)

ssr = (y_pred - mean)**2
sse = (y_test-y_pred)**2
sst = (y_test-mean)**2

print('Sum of squares regression:', np.sum(ssr))
print('Sum of Squared Error:', np.sum(sse))
print('Sum of squares total:', np.sum(sst))